"""
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']',
determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
"""
class Solution:
    def isValid(self, s: str) -> bool:
        stack=[]
        flVerify = True

        for lt in s:
            if lt in "([{":
                stack.append(lt)
            elif lt in ")]}":
                if len(stack) == 0:
                    flVerify = False
                    break

                br = stack.pop()
                print('br = ', br, ' lt =', lt)
                if br =='(' and lt ==')':
                    continue
                if br =='[' and lt ==']':
                    continue
                if br =='{' and lt =='}':
                    continue

                # in no condition
                flVerify = False
                break


        if flVerify and len(stack) == 0:
            return True
        else:
            return False

if __name__ == "__main__":
    s = "([)]"
    a = Solution()
    a = a.isValid(s)
    print('res', a)
